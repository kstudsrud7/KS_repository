trigger: none

pool:
  vmImage: 'windows-latest'

variables:
  SolutionName: 'StokeSoftwareBase'
  OrgName: 'SynergyImports'
  ProjectName: 'D365Sales'
  UserEmail: 'D365Admin@SynergyImports360.onmicrosoft.com'
  UserName: 'D365Admin'
  AZURE_DEVOPS_PAT: 'altbtdcqccjwkn7d5ubbkvjsbwb2czdgrwvgtqqygg3iyxdqfc6q'

stages:
  - stage: ExportSolution
    jobs:
      - job: Export
        steps:
          - task: PowerPlatformToolInstaller@2
            inputs:
              DefaultVersion: true
          - task: PowerPlatformWhoAmI@2
            inputs:
              authenticationType: 'PowerPlatformSPN'
              PowerPlatformSPN: 'DEV'
          - task: PowerPlatformExportSolution@2
            inputs:
              authenticationType: 'PowerPlatformSPN'
              PowerPlatformSPN: 'DEV'
              SolutionName: '$(SolutionName)'
              SolutionOutputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName).zip'
              AsyncOperation: true
              MaxAsyncWaitTime: '60'
          - task: PowerPlatformUnpackSolution@2
            inputs:
              SolutionInputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName).zip'
              SolutionTargetFolder: '$(Build.SourcesDirectory)\Solutions\$(SolutionName)'
          - task: CmdLine@2
            inputs:
              script: |
                echo commit all changes
                git config user.email "$(UserEmail)"
                git config user.name "$(UserName)"
                git checkout -B main
                git add --all
                git commit -m "code commit"
                git remote set-url origin "https://$(AZURE_DEVOPS_PAT)@dev.azure.com/$(OrgName)/$(ProjectName)/_git/$(ProjectName)"
                git push --set-upstream origin main

  - stage: ImportSolutions
    jobs:
      - job: ImportToTest
        steps:
          - task: PowerPlatformToolInstaller@2
            inputs:
              DefaultVersion: true
          - task: PowerPlatformExportSolution@2
            inputs:
              authenticationType: 'PowerPlatformSPN'
              PowerPlatformSPN: 'DEV'
              SolutionName: '$(SolutionName)'
              SolutionOutputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName)_managed.zip'
              Managed: true
              AsyncOperation: true
              MaxAsyncWaitTime: '60'
          - task: PowerPlatformImportSolution@2
            inputs:
              authenticationType: 'PowerPlatformSPN'
              PowerPlatformSPN: 'TEST'
              SolutionInputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName)_managed.zip'
              AsyncOperation: false
              ConvertToManaged: true
              PublishCustomizationChanges: true
      - job: ImportToPROD
        dependsOn: ImportToTest
        steps:
          - task: PowerPlatformToolInstaller@2
            inputs:
              DefaultVersion: true
          - task: PowerPlatformExportSolution@2
            inputs:
              authenticationType: 'PowerPlatformSPN'
              PowerPlatformSPN: 'DEV'
              SolutionName: '$(SolutionName)'
              SolutionOutputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName)_managed.zip'
              Managed: true
              AsyncOperation: true
              MaxAsyncWaitTime: '60'
          - task: PowerPlatformImportSolution@2
            inputs:
              authenticationType: 'PowerPlatformSPN'
              PowerPlatformSPN: 'PROD'
              SolutionInputFile: '$(Build.ArtifactStagingDirectory)\$(SolutionName)_managed.zip'
              AsyncOperation: false
              ConvertToManaged: true
              PublishCustomizationChanges: true
